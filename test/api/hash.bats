# setup paths for BATS test units
setup() {
    bats_require_minimum_version 1.5.0
    T="$BATS_TEST_DIRNAME"
    TR=`cd "$T"/.. && pwd`
    R=`cd "$TR"/.. && pwd`
    TMP="$BATS_TEST_TMPDIR"
    load "$TR"/test_helper/bats-support/load
    load "$TR"/test_helper/bats-assert/load
    load "$TR"/test_helper/bats-file/load
    ZTMP="$BATS_FILE_TMPDIR"
    cd $ZTMP
    # vector of length 896 from https://csrc.nist.gov/projects/cryptographic-algorithm-validation-program/secure-hashing
    # SHA Test Vectors for Hashing Byte-Oriented Messages
    # took the vector in SHA512shortMsg.rsp divided in two parts to test update
    STR896_first400='518985977ee21d2bf622a20567124fcbf11c72df805365835ab3c041f4a9cd8a0ad63c9dee1018aa21a9fa3720f47dc48006'
    STR896_last496='f1aa3dba544950f87e627f369bc2793ede21223274492cceb77be7eea50e5a509059929a16d33a9f54796cde5770c74bd3ecc25318503f1a41976407aff2'
    # took the vector in SHA256shortMsg.rsp divided in two parts to test update
    STR448_first200='2d52447d1244d2ebc28650e7b05654bad35b3a68eedc7f8515'
    STR448_final248='306b496d75f3e73385dd1b002625024b81a02f2fd6dffb6e6d561cb7d0bd7a'
}

save() {
    >&3 echo " ðŸ’¾ $1"
    export output=`cat $ZTMP/$1`
}

run_exec() {
    binary="$1"
    shift
    unset LD_PRELOAD
    if strings "$R/libzenroom.so" | grep -q "__asan_init"; then
         export LD_PRELOAD=$(cc -print-file-name=libasan.so)
    fi
    LD_LIBRARY_PATH=$R LD_PRELOAD=$LD_PRELOAD "./$binary" "$@"
}

@test "HASH API :: Compile tests" {
    LDADD="-L$R -lzenroom"
    CFLAGS="$CFLAGS -I$R/src"
    cc ${CFLAGS} -ggdb -o hash_init   $T/hash_init.c ${LDADD}
    cc ${CFLAGS} -ggdb -o hash_update $T/hash_update.c ${LDADD}
    cc ${CFLAGS} -ggdb -o hash_final  $T/hash_final.c ${LDADD}
}

@test "HASH API :: Init SHA512" {
    run_exec hash_init sha512 > ctx_sha512
    save ctx_sha512
    assert_output '40000000000000000000000000000000008c9bcf367e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b
}


@test "HASH API :: Update SHA512" {
    run_exec hash_update `cat ctx_sha512` ${STR896_first400} > ctx_sha512_896_first400
    save ctx_sha512_896_first400
    assert_output '49001000000000000000000000000000008c9bcf367e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b2b1de27e97858951cb4f126705a222f683655380df721cf18acda9f441c0b35aaa1810ee9d3cd60ac47df42037faa

    run_exec hash_update `cat ctx_sha512_896_first400` ${STR896_last496} > ctx_sha512_896
    save ctx_sha512_896
    assert_output '48003000000000000000000000000000008c9bcf367e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b2b1de27e97858951cb4f126705a222f683655380df721cf18acda9f441c0b35aaa1810ee9d3cd60ac47df42037faa9214954ba3daaf10680c29b367f627ef8504974322221de3e790ea5eee77bb7ce2cd3169a925990505a7057de6c79549f3a501853c2ecd34bc7f2af076497411a3f
}

@test "HASH API :: Final SHA512" {
    run_exec hash_final `cat ctx_sha512_896` > hash_sha512_896
    save hash_sha512_896
    assert_output 'wAkmo3TN5VuPvXf1DaE2PaGXRNP0ZOB84xeUxaYbb5yFaJ+hz+E2VTUn/Ydr6RZzwsrC3RV7Le/qNghRttks9A=='
}

#####################################
### SHA256

@test "HASH API :: Init SHA256" {
    run_exec hash_init sha256 > ctx_sha256
    save ctx_sha256
    assert_output '2000000000000000067e6096a85ae67bb72f36e3c3af54fa57f520e518c68059babd9831f19cde05b
}
@test "HASH API :: Update SHA256" {
    run_exec hash_update `cat ctx_sha256` ${STR448_first200} > ctx_sha256_448_first200
    save ctx_sha256_448_first200
    assert_output '2c80000000000000067e6096a85ae67bb72f36e3c3af54fa57f520e518c68059babd9831f19cde05b7d44522debd24412e75086c2ba5456b0683a5bd3857fdcee
    run_exec hash_update `cat ctx_sha256_448_first200` ${STR448_final248} > ctx_sha256_448
    save ctx_sha256_448
    assert_output '2c00100000000000067e6096a85ae67bb72f36e3c3af54fa57f520e518c68059babd9831f19cde05b7d44522debd24412e75086c2ba5456b0683a5bd3857fdcee496b3015e7f3756d1bdd8533022526002fa0814bfbdfd62f1c566d6e7abdd0b
}

@test "HASH API :: Final SHA256" {
    run_exec hash_final `cat ctx_sha256_448` > hash_sha256_448
    save hash_sha256_448
    assert_output 'z7iNb68t46adNhlazsLiVeKvK32TOZfzSOCfbOV1g2A='
}
