#!/usr/bin/env sh

[ -n "$MESON_SOURCE_ROOT" ] && {
	cd "$MESON_SOURCE_ROOT"
	cd ..
}

[ -d src/lua ] || {
	echo "error - directory not found: src/lua"
	exit 1
}

pwd=$(pwd)
dst=${pwd}/src/lualibs_detected.c
opts="${1}"
# script to take all extensions in src/lua and embed them inside
# zenroom as strings

compile_flag=""
[ "$opts" = "compile" ] && compile_flag="#define LUA_COMPILED 1"

cat <<EOF > ${dst}
// This file is generated by running build/embed-lualibs
#include <lua.h>
#include <lua_functions.h>

${compile_flag}

#ifdef __EMSCRIPTEN__
const unsigned int fakelen = 0;
#else
EOF
libs=$(find src/lua -type f -name '*.lua')

# emscripten doesn't supports embedding this way
# will use --preload-file instead
zen_extensions=""
scenarios=""

[ -r luac45 ] || {
	curl -Ls -o luac54 https://github.com/dyne/luabinaries/releases/latest/download/luac54
	chmod +x luac54
}

for i in ${libs}; do
    p=$(basename $i)
    n=$(echo "$p" | cut -d'.' -f1)
    f="lualib_${n}.c"
    echo "+ $i $opts"
	tmp=$(mktemp -d)
	if [ "$opts" = "compile" ]; then
		./luac54 -o ${tmp}/${n} $i
	else
		cp $i ${tmp}/${n}
	fi
	cd $tmp
	echo "// $i" >>  ${dst}
	xxd -i ${n}   >>  ${dst}
	if [ "$(uname -s)" = "Linux" ]; then
		sed -i 's/^unsigned/const unsigned/' ${dst}
	else
		sed -e 's/^unsigned/const unsigned/' -i '' "${dst}"
	fi
	echo "" >>  ${dst}
	cd - > /dev/null
	rm -rf $tmp
	ext_nes="\t{\"${n}\", &${n}_len, (const char *)${n}},"
	ext_es="\t{\"${n}\", &fakelen, \"/$p\"},"
	zen_extensions="${zen_extensions}\n#ifndef __EMSCRIPTEN__\n${ext_nes}\n#else\n${ext_es}\n#endif"

	[ "$(echo "$n" | cut -d'_' -f1)" = "zencode" ] && {
		scenarios="${scenarios}\n\t\"$(echo "$n" | cut -d'_' -f2-)\","
	}
done

cat <<EOF >> ${dst}
#endif // __EMSCRIPTEN__

zen_extension_t zen_extensions[] = {$(printf "%b" "$zen_extensions")
	{ NULL, NULL, NULL }
};

const char* const zen_scenarios[] = {$(printf "%b" "$scenarios")
	NULL
};
EOF
